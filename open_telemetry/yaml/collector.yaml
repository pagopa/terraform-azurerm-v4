apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: ${namespace}
spec:
  mode: deployment # This configuration is omittable.
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:${receiver_port}

    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 2000
      batch:
      resource:
        attributes:
        - key: deployment.environment
          value: ${deployment_env}
          action: upsert
        - key: data_stream.namespace
          value: ${elastic_namespace}
          action: upsert
      tail_sampling:
        decision_wait: 30s
        policies: [
          {
            # always sample errors
            name: trace-status-policy,
            type: status_code,
            status_code: { status_codes: [ERROR] }
          },
          {
            # low sampling for readiness/liveness probes
            name: downsample-readiness-policy,
            type: and,
            and:
              {
                and_sub_policy:
                  [
                    {
                      # filter by route
                      name: route-live-ready-policy,
                      type: string_attribute,
                      string_attribute:
                        {
                          key: http.route,
                          values: [%{for probe_path in probe_paths}"${probe_path}",%{endfor}],
                          enabled_regex_matching: true,
                        },
                    },
                    {
                      # apply probabilistic sampling
                      name: probabilistic-policy,
                      type: probabilistic,
                      probabilistic: { sampling_percentage: ${probes_sampling_percentage} },
                    }
                  ]
              }
          },
          {
            # apply probabilistic sampling
            name: probabilistic-policy,
            type: probabilistic,
            probabilistic: { sampling_percentage: ${sampling_percentage} },
          }
        ]

    exporters:
      logging:
        loglevel: warn

      otlphttp/elastic:
        tls:
          insecure: true
        endpoint: "${apm_endpoint}"
        headers:
          Authorization: "ApiKey ${apm_api_key}"

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [resource %{ if sampling_enabled }, tail_sampling%{endif}]
          exporters: [logging, otlphttp/elastic]
        metrics:
          receivers: [otlp]
          processors: [resource]
          exporters: [logging, otlphttp/elastic]
        logs:
          receivers: [otlp]
          processors: [resource]
          exporters: [logging, otlphttp/elastic]
